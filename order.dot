digraph Hierarchy {
graph[ ranksep = 0.3, nodesep = 0.15, margin = 0, ratio = "compress", size = "1,1"];
node [ shape = box, style = "rounded, bold", fontname = "sans bold", margin = .04, width = 0, height = 0 ];
edge[arrowsize=.8];

Equality [ style = "rounded, dashed", fontname = "sans" ];
Choice [ style = "rounded, dashed", fontname = "sans" ];
Countable [ style = "rounded, dashed", fontname = "sans" ];
Finite [ style = "rounded, dashed", fontname = "sans" ];

Equality -> Choice;
Equality -> Countable;
Choice -> Countable;
Equality -> Finite;
Choice -> Finite;
Countable -> Finite;
Equality -> POrder;
Choice -> POrder;
Equality -> Lattice;
Choice -> Lattice;
POrder -> Lattice;
Equality -> BLattice;
Choice -> BLattice;
POrder -> BLattice;
Lattice -> BLattice;
Equality -> TBLattice;
Choice -> TBLattice;
POrder -> TBLattice;
Lattice -> TBLattice;
BLattice -> TBLattice;
Equality -> DistrLattice;
Choice -> DistrLattice;
POrder -> DistrLattice;
Lattice -> DistrLattice;
Equality -> BDistrLattice;
Choice -> BDistrLattice;
POrder -> BDistrLattice;
Lattice -> BDistrLattice;
BLattice -> BDistrLattice;
DistrLattice -> BDistrLattice;
Equality -> TBDistrLattice;
Choice -> TBDistrLattice;
POrder -> TBDistrLattice;
Lattice -> TBDistrLattice;
BLattice -> TBDistrLattice;
TBLattice -> TBDistrLattice;
DistrLattice -> TBDistrLattice;
BDistrLattice -> TBDistrLattice;
Equality -> CBDistrLattice;
Choice -> CBDistrLattice;
POrder -> CBDistrLattice;
Lattice -> CBDistrLattice;
BLattice -> CBDistrLattice;
DistrLattice -> CBDistrLattice;
BDistrLattice -> CBDistrLattice;
Equality -> CTBDistrLattice;
Choice -> CTBDistrLattice;
POrder -> CTBDistrLattice;
Lattice -> CTBDistrLattice;
BLattice -> CTBDistrLattice;
TBLattice -> CTBDistrLattice;
DistrLattice -> CTBDistrLattice;
BDistrLattice -> CTBDistrLattice;
TBDistrLattice -> CTBDistrLattice;
CBDistrLattice -> CTBDistrLattice;
Equality -> Total;
Choice -> Total;
POrder -> Total;
Lattice -> Total;
DistrLattice -> Total;
Equality -> FinPOrder;
Choice -> FinPOrder;
Countable -> FinPOrder;
Finite -> FinPOrder;
POrder -> FinPOrder;
Equality -> FinLattice;
Choice -> FinLattice;
Countable -> FinLattice;
Finite -> FinLattice;
POrder -> FinLattice;
Lattice -> FinLattice;
BLattice -> FinLattice;
TBLattice -> FinLattice;
FinPOrder -> FinLattice;
Equality -> FinDistrLattice;
Choice -> FinDistrLattice;
Countable -> FinDistrLattice;
Finite -> FinDistrLattice;
POrder -> FinDistrLattice;
Lattice -> FinDistrLattice;
BLattice -> FinDistrLattice;
TBLattice -> FinDistrLattice;
DistrLattice -> FinDistrLattice;
BDistrLattice -> FinDistrLattice;
TBDistrLattice -> FinDistrLattice;
FinPOrder -> FinDistrLattice;
FinLattice -> FinDistrLattice;
Equality -> FinCDistrLattice;
Choice -> FinCDistrLattice;
Countable -> FinCDistrLattice;
Finite -> FinCDistrLattice;
POrder -> FinCDistrLattice;
Lattice -> FinCDistrLattice;
BLattice -> FinCDistrLattice;
TBLattice -> FinCDistrLattice;
DistrLattice -> FinCDistrLattice;
BDistrLattice -> FinCDistrLattice;
TBDistrLattice -> FinCDistrLattice;
CBDistrLattice -> FinCDistrLattice;
CTBDistrLattice -> FinCDistrLattice;
FinPOrder -> FinCDistrLattice;
FinLattice -> FinCDistrLattice;
FinDistrLattice -> FinCDistrLattice;
Equality -> FinTotal;
Choice -> FinTotal;
Countable -> FinTotal;
Finite -> FinTotal;
POrder -> FinTotal;
Lattice -> FinTotal;
BLattice -> FinTotal;
TBLattice -> FinTotal;
DistrLattice -> FinTotal;
BDistrLattice -> FinTotal;
TBDistrLattice -> FinTotal;
Total -> FinTotal;
FinPOrder -> FinTotal;
FinLattice -> FinTotal;
FinDistrLattice -> FinTotal;
}
